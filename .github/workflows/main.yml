name: Deploy (Development)

concurrency: 
  group: development
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:

  deploy:

    name: deploy to server 
    runs-on: ubuntu-latest
    environment: 
      name: development
      
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
  
      - name: Install sshpass
        run: sudo apt-get install sshpass
        
      - name: Stop Docker containers
        run: |
          sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash <<'ENDSSH'
          cd ${{ vars.PATH }}
          sudo make stop
          ENDSSH

      - name: Fetch sources & submodules
        run: |
          sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash <<'ENDSSH'
          cd ${{ vars.PATH }}
          git checkout -q ${{ vars.BRANCH_NAME }} && git pull
          sudo make fetch-modules
          cd ${{ vars.PATH }}/backend/apps/ifc_validation/checks/ifc_gherkin_rules && git checkout -q ${{ vars.BRANCH_NAME }} && git pull
          cd ./ifc_validation_models && git checkout -q ${{ vars.BRANCH_NAME }} && git pull
          cd ${{ vars.PATH }}/backend/apps/ifc_validation/checks/step_file_parser && git checkout -q master && git pull
          cd ${{ vars.PATH }}/backend/apps/ifc_validation_models && git checkout -q ${{ vars.BRANCH_NAME }} && git pull
          cd ${{ vars.PATH }}
          ./check-submodules.sh
          ENDSSH
      
      - name: Set version
        run: |
          sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash <<'ENDSSH'
          cd ${{ vars.PATH }}
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION="${{ vars.VERSION }}-${COMMIT_HASH}"
          echo "Set VERSION to ${VERSION}"
          echo "${VERSION}" > VERSION          
          ENDSSH

      - name: Tag commit
        run: |
          sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash <<'ENDSSH'
          cd ${{ vars.PATH }}
          git config --global user.name "bSI Validation Service CI/CD"
          git config --global user.email "validate@buildingsmart.org"
          git tag ${VERSION}
          git push origin ${VERSION}
          ENDSSH

      - name: Build Docker images
        run: |
          sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash <<'ENDSSH'
          cd ${{ vars.PATH }}
          sudo make rebuild
          ENDSSH

      - name: Start Docker containers
        run: |
          sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash <<'ENDSSH'
          cd ${{ vars.PATH }}
          sudo docker compose -f ${{ vars.DOCKER_COMPOSE_FILE }} --env-file ${{ vars.ENV_FILE }} up -d
          ENDSSH
